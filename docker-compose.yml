# Using this version string helps with some older docker-compose versions that
# we regularly encounter. It also ensures the 'extend' feature works.
version: "2.4"

# NB: use of this file by 'docker-compose' depends on configuration settings
# found in 'defaults.env'. This means you must either;
#
# (a) pass '--env-file=defaults.env' to docker-compose,
# (b) source defaults.env into the environment that will run docker-compose, or
# (c) create a symlink from '.env' -> 'defaults.env' so that docker-compose
#     picks up them up automatically.
#
# We contemplated two alternatives to these requirements;
#
# 1. rename the default settings file to '.env', so that docker-compose would
#    pick it up automatically. Rejected: that would hide the one file that we
#    most want first-time users to find.
# 2. put an '.env' -> 'defaults.env' symlink into version control, so that
#    suggestion (c) is pre-arranged. Rejected: we want the HCP code to pose as
#    few portability and filesystem-specific challenges going forward, and
#    committing symlinks into version control seemed a backwards step in this
#    regard.
#
# PLEASE READ 'defaults.env'!! It not only provides settings, it also provides
# a lot of explanatory content. (Which is the reason this comment is the last
# piece of documentation you'll see in this file.)

volumes:
    fqdn:
    enrolldb:
    attestdb:
    swtpm:
    tpmsocket:

networks:
    hcpnetwork:
        internal: true

services:

    common:
        image: ${HCP_IMAGE_COMMON}
        domainname: avoid-me-domain
        volumes:
          - fqdn:${HCP_FQDN_PATH}:rw
        environment:
          - HCP_FQDN_PATH=${HCP_FQDN_PATH}
          - HCP_FQDN_REFRESH=${HCP_FQDN_REFRESH}
          - HCP_FQDN_EXPIRY=${HCP_FQDN_EXPIRY}
          - HCP_FQDN_DEFAULT_DOMAIN=${HCP_FQDN_DEFAULT_DOMAIN}

    enrollsvc_mgmt:
        extends: common
        image: ${HCP_IMAGE_ENROLLSVC}
        command: /hcp/enrollsvc/run_mgmt.sh
        volumes:
          - enrolldb:${HCP_ENROLLSVC_STATE_PREFIX}:rw
          - ${HCP_CRED_ENROLL_SIGNER}:${HCP_ENROLLSVC_SIGNER}:ro
          - ${HCP_CRED_ENROLL_X509_CA}:${HCP_ENROLLSVC_GENCERT}:ro
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_ENROLLSVC_MGMT_HOSTNAME}
          - HCP_ENROLLSVC_STATE_PREFIX=${HCP_ENROLLSVC_STATE_PREFIX}
          - HCP_ENROLLSVC_SIGNER=${HCP_ENROLLSVC_SIGNER}
          - HCP_ENROLLSVC_GENCERT=${HCP_ENROLLSVC_GENCERT}
          - HCP_ENROLLSVC_REALM=${HCP_ENROLLSVC_REALM}
        healthcheck:
            test: curl -f -G http://localhost:5000/ || exit 1
            timeout: 1s
            interval: 2s

    enrollsvc_repl:
        extends: common
        image: ${HCP_IMAGE_ENROLLSVC}
        command: /hcp/enrollsvc/run_repl.sh
        volumes:
          - enrolldb:${HCP_ENROLLSVC_STATE_PREFIX}:ro
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_ENROLLSVC_REPL_HOSTNAME}
          - HCP_ENROLLSVC_STATE_PREFIX=${HCP_ENROLLSVC_STATE_PREFIX}
        healthcheck:
            test: git ls-remote --heads git://localhost/enrolldb || exit 1
            timeout: 1s
            interval: 2s

    attestsvc_repl:
        extends: common
        image: ${HCP_IMAGE_ATTESTSVC}
        command: /hcp/attestsvc/run_repl.sh
        volumes:
          - attestdb:${HCP_ATTESTSVC_STATE_PREFIX}:rw
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_ATTESTSVC_REPL_HOSTNAME}
          - HCP_ATTESTSVC_STATE_PREFIX=${HCP_ATTESTSVC_STATE_PREFIX}
          - HCP_ATTESTSVC_REMOTE_REPO=${HCP_ATTESTSVC_REMOTE_REPO}
          - HCP_ATTESTSVC_UPDATE_TIMER=${HCP_ATTESTSVC_UPDATE_TIMER}
        healthcheck:
            test: /hcp/attestsvc/healthcheck_repl.sh
            timeout: 1s
            interval: 2s

    attestsvc_hcp:
        extends: common
        image: ${HCP_IMAGE_ATTESTSVC}
        command: /hcp/attestsvc/run_hcp.sh
        volumes:
          - attestdb:${HCP_ATTESTSVC_STATE_PREFIX}:ro
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_ATTESTSVC_HCP_HOSTNAME}
          - HCP_ATTESTSVC_STATE_PREFIX=${HCP_ATTESTSVC_STATE_PREFIX}
        healthcheck:
            test: curl -f -G http://localhost:8080/ || exit 1
            timeout: 1s
            interval: 2s

    swtpmsvc:
        extends: common
        image: ${HCP_IMAGE_SWTPMSVC}
        command: /hcp/swtpmsvc/run_swtpm.sh
        volumes:
          - swtpm:${HCP_SWTPMSVC_STATE_PREFIX}
          - tpmsocket:${HCP_SWTPMSVC_TPMSOCKET_DIR}
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_SWTPMSVC_HOSTNAME}
          - HCP_SWTPMSVC_STATE_PREFIX=${HCP_SWTPMSVC_STATE_PREFIX}
          - HCP_SWTPMSVC_NO_SETUP=${HCP_SWTPMSVC_NO_SETUP}
          - HCP_SWTPMSVC_NO_ENROLL=${HCP_SWTPMSVC_NO_ENROLL}
          - HCP_SWTPMSVC_ENROLL_HOSTNAME=${HCP_SWTPMSVC_ENROLL_HOSTNAME}
          - HCP_SWTPMSVC_ENROLL_API=${HCP_SWTPMSVC_ENROLL_API}
          - HCP_SWTPMSVC_TPMSOCKET_DIR=${HCP_SWTPMSVC_TPMSOCKET_DIR}
          - HCP_SWTPMSVC_TPMSOCKET=${HCP_SWTPMSVC_TPMSOCKET}
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 1s
            interval: 2s
    swtpmsvc_no_setup:
        extends: swtpmsvc
        environment:
          - HCP_SWTPMSVC_NO_SETUP=1
    swtpmsvc_setup:
        extends: swtpmsvc
        command: /hcp/swtpmsvc/setup_swtpm.sh
    swtpmsvc_setup_no_enroll:
        extends: swtpmsvc_setup
        environment:
          - HCP_SWTPMSVC_NO_ENROLL=1

    client:
        extends: common
        image: ${HCP_IMAGE_CLIENT}
        command: /hcp/client/run_client.sh
        volumes:
          - tpmsocket:${HCP_CLIENT_TPMSOCKET_DIR}
          - ${HCP_CRED_ENROLL_VERIFIER}:${HCP_CLIENT_VERIFIER}:ro
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_CLIENT_HOSTNAME}
          - HCP_CLIENT_ATTEST_URL=${HCP_CLIENT_ATTEST_URL}
          - HCP_CLIENT_TPM2TOOLS_TCTI=${HCP_CLIENT_TPM2TOOLS_TCTI}
          - HCP_CLIENT_VERIFIER=${HCP_CLIENT_VERIFIER}
          - HCP_CLIENT_TPMSOCKET_DIR=${HCP_CLIENT_TPMSOCKET_DIR}

    # unusable configuration, to facilitate extending by caboodle_services
    # (which adds volume mounts, like 'client' does) and caboodle_alone (which
    # overrides some env-vars).
    caboodle_baseline:
        extends: common
        image: ${HCP_IMAGE_CABOODLE}
        command: ${HCP_CABOODLE_DEFAULT_CMD}
        networks:
          - hcpnetwork
        environment:
          - HCP_HOSTNAME=${HCP_CABOODLE_HOSTNAME}
          - HCP_ENROLLSVC_STATE_PREFIX=${HCP_ENROLLSVC_STATE_PREFIX}
          - HCP_ENROLLSVC_SIGNER=${HCP_ENROLLSVC_SIGNER}
          - HCP_ENROLLSVC_GENCERT=${HCP_ENROLLSVC_GENCERT}
          - HCP_ENROLLSVC_REALM=${HCP_ENROLLSVC_REALM}
          - HCP_ATTESTSVC_STATE_PREFIX=${HCP_ATTESTSVC_STATE_PREFIX}
          - HCP_ATTESTSVC_REMOTE_REPO=${HCP_ATTESTSVC_REMOTE_REPO}
          - HCP_ATTESTSVC_UPDATE_TIMER=${HCP_ATTESTSVC_UPDATE_TIMER}
          - HCP_SWTPMSVC_STATE_PREFIX=${HCP_SWTPMSVC_STATE_PREFIX}
          - HCP_SWTPMSVC_ENROLL_API=${HCP_SWTPMSVC_ENROLL_API}
          - HCP_SWTPMSVC_NO_ENROLL=${HCP_SWTPMSVC_NO_ENROLL}
          - HCP_SWTPMSVC_ENROLL_HOSTNAME=${HCP_SWTPMSVC_ENROLL_HOSTNAME}
          - HCP_SWTPMSVC_TPMSOCKET_DIR=${HCP_SWTPMSVC_TPMSOCKET_DIR}
          - HCP_SWTPMSVC_TPMSOCKET=${HCP_SWTPMSVC_TPMSOCKET}
          - HCP_CLIENT_ATTEST_URL=${HCP_CLIENT_ATTEST_URL}
          - HCP_CLIENT_TPM2TOOLS_TCTI=${HCP_CLIENT_TPM2TOOLS_TCTI}
          - HCP_CLIENT_VERIFIER=${HCP_CLIENT_VERIFIER}
          - HCP_CLIENT_TPMSOCKET_DIR=${HCP_CLIENT_TPMSOCKET_DIR}
          - HCP_CABOODLE_SLEEP_IF_FAIL=${HCP_CABOODLE_SLEEP_IF_FAIL}
          - HCP_SOAK_PREFIX=${HCP_SOAK_PREFIX}
          - HCP_SOAK_NUM_SWTPMS=${HCP_SOAK_NUM_SWTPMS}
          - HCP_SOAK_NUM_WORKERS=${HCP_SOAK_NUM_WORKERS}
          - HCP_SOAK_NUM_LOOPS=${HCP_SOAK_NUM_LOOPS}
          - HCP_SOAK_PC_ATTEST=${HCP_SOAK_PC_ATTEST}
          - HCP_SOAK_NO_CREATE=${HCP_SOAK_NO_CREATE}
    caboodle_services:
        extends: caboodle_baseline
        volumes:
          - tpmsocket:${HCP_CLIENT_TPMSOCKET_DIR}
          - ${HCP_CRED_ENROLL_VERIFIER}:${HCP_CLIENT_VERIFIER}:ro
    caboodle_alone:
        extends: caboodle_baseline
        environment:
          - HCP_CABOODLE_ALONE=1
          - HCP_ATTESTSVC_REMOTE_REPO=${HCP_CABOODLE_ATTESTSVC_REMOTE_REPO}
          - HCP_SWTPMSVC_ENROLL_API=${HCP_CABOODLE_SWTPMSVC_ENROLL_API}
          - HCP_CLIENT_ATTEST_URL=${HCP_CABOODLE_CLIENT_ATTEST_URL}
    caboodle:
        extends: caboodle_alone
