# vim: set expandtab shiftwidth=4 softtabstop=4:
# Using this version string helps with some older docker-compose versions that
# we regularly encounter. It also ensures the 'extend' feature works.
version: "2.4"

volumes:
    fqdn:
    enrolldb:
    attestdb:
    kdc_primary:
    kdc_secondary:
    sherver:
    tpm_aclient:
    tpmsocket_aclient:
    tpm_kdc_primary:
    tpmsocket_kdc_primary:
    tpm_kdc_secondary:
    tpmsocket_kdc_secondary:
    tpm_caboodlenet:
    tpmsocket_caboodlenet:
    tpm_sherver:
    tpmsocket_sherver:

networks:
    emgmt_private:
        internal: true
    kdc_primary_private:
        internal: true
    kdc_secondary_private:
        internal: true
    hcpnetwork:
        # internal: true

services:

    common:
        image: ${HCP_IMAGE_caboodle}
        init: true
        volumes:
          - fqdn:/fqdn-bus:rw
          - ${HCP_TOP}/usecase:/usecase:ro
        environment:
          - VERBOSE=2

# Enrollment svc, mgmt interface
    emgmt:
        extends: common
        image: ${HCP_IMAGE_enrollsvc}
        networks:
          - hcpnetwork
          - emgmt_private
        volumes:
          - enrolldb:/enrolldb:rw
          - ${HCP_TESTCREDS_ENROLLSIGNER}:/enrollsigner:ro
          - ${HCP_TESTCREDS_ENROLLCERTISSUER}:/enrollcertissuer:ro
          - ${HCP_TESTCREDS_ENROLLCERTCHECKER}:/enrollcertchecker:ro
          - ${HCP_TESTCREDS_ENROLLCLIENT}:/enrollclient:ro
          - ${HCP_TESTCREDS_ENROLLSERVER}:/enrollserver:ro
          - ${HCP_TOP}/vendors:/vendors:ro
        environment:
          - HCP_CONFIG_FILE=/usecase/emgmt.json
#        ports:
#          - "8443:8443"
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s
    emgmt_pol:
        extends: common
        image: ${HCP_IMAGE_policysvc}
        networks:
          - emgmt_private
        environment:
          - HCP_CONFIG_FILE=/usecase/emgmt_pol.json
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s

# Enrollment svc, replication interface
    erepl:
        extends: common
        image: ${HCP_IMAGE_enrollsvc}
        networks:
          - hcpnetwork
        volumes:
          - enrolldb:/enrolldb:ro
        environment:
          - HCP_CONFIG_FILE=/usecase/erepl.json
#          - VERBOSE=2
#        ports:
#          - "9418:9418"
        healthcheck:
            test: /hcp/enrollsvc/repl_healthcheck.sh
            timeout: 3s
            interval: 10s

# Attestation svc, replication client
    arepl:
        extends: common
        image: ${HCP_IMAGE_attestsvc}
        networks:
          - hcpnetwork
        volumes:
          - attestdb:/attestdb:rw
        environment:
          - HCP_CONFIG_FILE=/usecase/arepl.json
        healthcheck:
            test: test -f /attestdb/initialized && ! test -f /attestdb/hcp/transient-failure
            timeout: 3s
            interval: 10s

# Attestation svc, attestation interface
    ahcp:
        extends: common
        image: ${HCP_IMAGE_attestsvc}
        networks:
          - hcpnetwork
        volumes:
          - attestdb:/attestdb:ro
        environment:
          - HCP_CONFIG_FILE=/usecase/ahcp.json
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s

# Orchestrator client (create and/or enroll TPMs). You'll typically want to
# pass "-c -e" to this to make it do something.
    orchestrator:
        extends: common
        image: ${HCP_IMAGE_tools}
        networks:
          - hcpnetwork
        volumes:
          - ${HCP_TESTCREDS_ENROLLCERTCHECKER}:/enrollcertchecker:ro
          - ${HCP_TESTCREDS_ENROLLCLIENT}:/enrollclient:ro
          - tpm_aclient:/tpm_aclient
          - tpm_kdc_primary:/tpm_kdc_primary
          - tpm_kdc_secondary:/tpm_kdc_secondary
          - tpm_caboodlenet:/tpm_caboodlenet
          - tpm_sherver:/tpm_sherver
        environment:
          - HCP_CONFIG_FILE=/usecase/orchestrator.json

# Attestation client
    aclient:
        extends: common
        image: ${HCP_IMAGE_tools}
        networks:
          - hcpnetwork
        volumes:
          - tpmsocket_aclient:/tpm_socket_aclient
          - ${HCP_TESTCREDS_ENROLLVERIFIER}:/enrollverifier:ro
        environment:
          - HCP_CONFIG_FILE=/usecase/aclient.json
    aclient_tpm:
        extends: common
        image: ${HCP_IMAGE_swtpmsvc}
        network_mode: "none"
        volumes:
          - tpm_aclient:/tpm_aclient
          - tpmsocket_aclient:/tpm_socket_aclient
        environment:
          - HCP_CONFIG_FILE=/usecase/aclient_tpm.json
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 3s
            interval: 10s

# Kerberos Domain Controller - Primary
    kdc_primary:
        extends: common
        image: ${HCP_IMAGE_kdcsvc}
        volumes:
          - kdc_primary:/kdc
          - tpmsocket_kdc_primary:/tpm_socket_kdc_primary
          - ${HCP_TESTCREDS_ENROLLCERTCHECKER}:/enrollcertchecker:ro
          - ${HCP_TESTCREDS_ENROLLCLIENT}:/enrollclient:ro
          - ${HCP_TESTCREDS_ENROLLVERIFIER}:/enrollverifier:ro
        networks:
          - hcpnetwork
          - kdc_primary_private
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_primary.json
        ports:
          - "9090:9090"
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s
    kdc_primary_tpm:
        extends: common
        image: ${HCP_IMAGE_swtpmsvc}
        network_mode: "none"
        volumes:
          - tpm_kdc_primary:/tpm_kdc_primary
          - tpmsocket_kdc_primary:/tpm_socket_kdc_primary
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_primary_tpm.json
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 3s
            interval: 10s
    kdc_primary_pol:
        extends: common
        image: ${HCP_IMAGE_policysvc}
        networks:
          - kdc_primary_private
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_primary_pol.json
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s

# Kerberos Domain Controller - Secondary
    kdc_secondary:
        extends: common
        image: ${HCP_IMAGE_kdcsvc}
        volumes:
          - kdc_secondary:/kdc
          - tpmsocket_kdc_secondary:/tpm_socket_kdc_secondary
          - ${HCP_TESTCREDS_ENROLLCERTCHECKER}:/enrollcertchecker:ro
          - ${HCP_TESTCREDS_ENROLLCLIENT}:/enrollclient:ro
          - ${HCP_TESTCREDS_ENROLLVERIFIER}:/enrollverifier:ro
        networks:
          - hcpnetwork
          - kdc_secondary_private
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_secondary.json
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s
    kdc_secondary_tpm:
        extends: common
        image: ${HCP_IMAGE_swtpmsvc}
        network_mode: "none"
        volumes:
          - tpm_kdc_secondary:/tpm_kdc_secondary
          - tpmsocket_kdc_secondary:/tpm_socket_kdc_secondary
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_secondary_tpm.json
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 3s
            interval: 10s
    kdc_secondary_pol:
        extends: common
        image: ${HCP_IMAGE_policysvc}
        networks:
          - kdc_secondary_private
        environment:
          - HCP_CONFIG_FILE=/usecase/kdc_secondary_pol.json
        healthcheck:
            test: /hcp/common/webapi.sh healthcheck
            timeout: 3s
            interval: 10s

# SSH host
    sherver:
        extends: common
        image: ${HCP_IMAGE_sshsvc}
        volumes:
          - sherver:/sherver:rw
          - tpmsocket_sherver:/tpm_socket_sherver
          - ${HCP_TESTCREDS_ENROLLVERIFIER}:/enrollverifier:ro
        networks:
          - hcpnetwork
        environment:
          - HCP_CONFIG_FILE=/usecase/sherver.json
        healthcheck:
            test: /hcp/sshsvc/healthcheck.sh
            timeout: 3s
            interval: 10s
    sherver_tpm:
        extends: common
        image: ${HCP_IMAGE_swtpmsvc}
        network_mode: "none"
        volumes:
          - tpm_sherver:/tpm_sherver
          - tpmsocket_sherver:/tpm_socket_sherver
        environment:
          - HCP_CONFIG_FILE=/usecase/sherver_tpm.json
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 3s
            interval: 10s

# Caboodle instance
    caboodle_alone:
        extends: common
        image: ${HCP_IMAGE_caboodle}
        networks:
          - hcpnetwork
        environment:
          - HCP_CONFIG_FILE=/usecase/caboodle_alone.env
        volumes:
          - ${HCP_TOP}/vendors:/vendors:ro
        healthcheck:
            test: /bin/true
            timeout: 3s
            interval: 10s
    caboodle_networked:
        extends: caboodle_alone
        environment:
          - HCP_CONFIG_FILE=/usecase/caboodle_networked.json
        volumes:
          - tpmsocket_caboodlenet:/tpm_socket_caboodlenet
          - ${HCP_TESTCREDS_ENROLLVERIFIER}:/enrollverifier:ro
        networks:
          - hcpnetwork
        healthcheck:
            test: /hcp/caboodle/networked_healthcheck.sh
            timeout: 3s
            interval: 10s
    caboodle_networked_tpm:
        extends: common
        image: ${HCP_IMAGE_swtpmsvc}
        network_mode: "none"
        volumes:
          - tpm_caboodlenet:/tpm_caboodlenet
          - tpmsocket_caboodlenet:/tpm_socket_caboodlenet
        environment:
          - HCP_CONFIG_FILE=/usecase/caboodle_networked_tpm.json
        healthcheck:
            test: /hcp/swtpmsvc/healthcheck.sh
            timeout: 3s
            interval: 10s
