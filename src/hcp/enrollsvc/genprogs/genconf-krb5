#!/bin/bash

cd "$1"

myjson=$(echo "$ENROLL_JSON" | jq -r '.["genconf-krb5"] // empty')
if [[ -z $myjson ]]; then
	printenv | egrep -e "^ENROLL" | sort >&2
	exit 0
fi

echo "# Generated by enrollsvc::genconf-krb5" > krb5.conf

# Loop over the sub-sections of our JSON config section
sections=( $(echo "$myjson" | jq -r 'keys[] // empty') )
for sectionname in ${sections[@]}; do
	if [[ $sectionname == "realms" ]]; then
		# If there's a realms section (which there should be), we
		# process it differently - see the code further down.
		continue
	fi
	# Extract the JSON sub-structure
	sectionjson=$(echo "$myjson" | jq -r ".[\"$sectionname\"] // empty")
	if [[ -z $sectionjson ]]; then
		continue
	fi
	# Produce a krb5.conf-style section;
	#    [sectionname]
	#        foo1 = bar1
	#        foo2 = bar2
	echo "[$sectionname]" >> krb5.conf
	sectionkeys=( $(echo "$sectionjson" | jq -r 'keys[]') )
	for key in ${sectionkeys[@]}; do
		localvalue=$(echo "$sectionjson" | jq -r ".[\"$key\"] // empty")
		echo "    $key = $localvalue" >> krb5.conf
	done
done

# Deal with the "realms" sub-section of JSON config section
realmsjson=$(echo "$myjson" | jq -r '.realms // {}')
realms=( $(echo "$realmsjson" | jq -r 'keys[] // empty') )
# Produce a krb5.conf-style section;
#    [realms]
#        <realm1> = {
#            foo1 = bar1
#            foo2 = bar2
#        }
#        <realm2> = [etc]
if [[ ${#realms[@]} -gt 0 ]]; then
	echo "[realms]" >> krb5.conf
fi
# Note the distinction between realm (singular) and realms (plural)
for realm in ${realms[@]}; do
	realmjson=$(echo "$realmsjson" | jq -r ".[\"$realm\"] // {}")
	realmkeys=( $(echo "$realmjson" | jq -r 'keys[]') )
	echo "    $realm = {" >> krb5.conf
	for key in ${realmkeys[@]}; do
		localvalue=$(echo "$realmjson" | jq -r ".[\"$key\"] // empty")
		echo "        $key = $localvalue" >> krb5.conf
	done
	echo "    }" >> krb5.conf
done

echo "public krb5.conf"
