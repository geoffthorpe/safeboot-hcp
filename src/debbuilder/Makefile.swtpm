SWTPM_PKG_SRC := $(TOP)/ext-tpmware/swtpm

$(eval $(call debian_control_deps,DEPS_SWTPM,$(SWTPM_PKG_SRC)))
$(eval $(call pp_add_layer,\
	DBB_SWTPM,\
	DEBBUILDER,\
	DEBBUILDER,\
	$(DEPS_SWTPM),\
	,\
	$(HCP_DEBBUILDER_SRC)/Makefile.swtpm,\
	,\
	))

# Prep the inputs for pp_add_dpkg_build()

# - expected packages, and the canonical choice
swtpm_PKGS := swtpm swtpm-libs swtpm-dbgsym swtpm-dev swtpm-tools swtpm-tools-dbgsym
swtpm_CANONICAL := swtpm swtpm-libs swtpm-tools

# - codebase info, how to build, etc
SWTPM_PKG_REFFILE := ./autogen.sh
SWTPM_PKG_CMD_BOOTSTRAP := NOCONFIGURE=1 ./autogen.sh
SWTPM_PKG_CMD_PACKAGE := dpkg-buildpackage -uc -us

# - dependencies on any possibly-locally-built packages.
swtpm_DEPENDS := swtpm-libs libtpms0
swtpm-dbgsym := swtpm libtpms0-dbgsym
swtpm-dev_DEPENDS := swtpm libtpms-dev
swtpm-tools_DEPENDS := swtpm
swtpm-tools-dbgsym_DEPENDS := swtpm-tools

# - expected package filenames (including version/arch/etc)
SWTPM_VERSION ?= 0.8.0
SWTPM_RELEASE ?= ~dev1
SWTPM_ARCH ?= amd64
$(foreach p,$(swtpm_PKGS),\
	$(eval $p_LOCAL_FILE := \
		$p_$(SWTPM_VERSION)$(SWTPM_RELEASE)_$(SWTPM_ARCH).deb))

# Turn the crank
$(eval $(call pp_add_dpkg_build,\
	SWTPM,\
	DBB_SWTPM))
