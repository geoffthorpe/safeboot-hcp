LIBTPMS_PKG_SRC := $(TOP)/ext-tpmware/libtpms

$(eval $(call pp_add_layer,\
	DBB_LIBTPMS,\
	DEBBUILDER,\
	DEBBUILDER,\
	,\
	,\
	$(HCP_DEBBUILDER_SRC)/Makefile.libtpms,\
	$(LIBTPMS_PKG_SRC)))

# Prep the inputs for pp_add_dpkg_build()

# - expected packages, and the canonical choice
libtpms_PKGS := libtpms0 libtpms0-dbgsym libtpms-dev
libtpms_CANONICAL := libtpms0

# - codebase info, how to build, etc
LIBTPMS_PKG_REFFILE := ./autogen.sh
LIBTPMS_PKG_CMD_BOOTSTRAP := NOCONFIGURE=1 ./autogen.sh
LIBTPMS_PKG_CMD_PACKAGE := dpkg-buildpackage -uc -us

# - dependencies on any possibly-locally-built packages
libtpms-dev_DEPENDS := libtpms0
libtpms0-dbgsym_DEPENDS: libtpms0

# - expected package filenames (including version/arch/etc)
LIBTPMS_VERSION ?= 0.10.0
LIBTPMS_RELEASE ?= ~dev1
LIBTPMS_ARCH ?= amd64
$(foreach p,$(libtpms_PKGS),\
	$(eval $p_LOCAL_FILE := \
		$p_$(LIBTPMS_VERSION)$(LIBTPMS_RELEASE)_$(LIBTPMS_ARCH).deb))

# Turn the crank
$(eval $(call pp_add_dpkg_build,\
	LIBTPMS,\
	DBB_LIBTPMS))
