#!/bin/bash

source /hcp/common/hcp.sh

# This callback, if registered in HCP_ATTESTCLIENT_CALLBACKS, serves to hoover
# up various assets generated by enrollsvc "genprogs" and perform some kind of
# standard/common treatment.
#
# For any assets that should get more specific handling than what is done here,
# callbacks should be defined to do that work and they should be listed in
# HCP_ATTESTCLIENT_CALLBACKS earlier than this one (to ensure it runs before
# hand). If those callbacks leave those assets in the source (current)
# directory when exiting, then this callback will still pick up on them and
# perform the standard treatment. To avoid this, those callbacks should remove
# the source assets before exiting.

# GENPROG: genconf-krb5
# OUTPUT: krb5.conf

if [[ ! -f krb5.conf ]]; then
	echo "No 'krb5.conf' found, skipping" >&2
else
	echo "Installing /etc/krb5.conf"
	if [[ -f /etc/krb5.conf ]]; then
		rm -f /etc/krb5.conf-replaced-by-hcp
		mv /etc/krb5.conf /etc/krb5.conf-replaced-by-hcp
	fi
	cp krb5.conf /etc/
fi

# GENPROG: gencert-hxtool
# OUTPUT: hostcert-*[-key].pem

CERTS=$(find . -name "hostcert-*.pem")
if [[ -n $CERTS ]]; then
	echo "Installing hostcerts"
fi
for cert in $CERTS; do
	key="${cert::(-4)}-key.pem"
	if [[ ! -f $key ]]; then
		# The wildcard for CERTS will match on the keys too, so testing
		# for the existence of the key corresponding to each cert
		# avoids that.
		continue
	fi
	mkdir -p /etc/ssl/hostcerts
	cp "$cert" "$key" /etc/ssl/hostcerts
	echo "- (Cert) $cert"
	echo "-  (Key) $key"
	chmod 644 "/etc/ssl/hostcerts/$cert"
	chmod 600 "/etc/ssl/hostcerts/$key"
done

# GENPROG: gencert-issuer
# OUTPUT: certissuer.pem

if [[ ! -f certissuer.pem ]]; then
	echo "No 'certissuer.pem' found, skipping" >&2
else
	add_trust_root certissuer.pem HCP certissuer.pem
fi
