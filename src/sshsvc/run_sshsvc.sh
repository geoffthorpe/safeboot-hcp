#!/bin/bash

source /hcp/common/hcp.sh

if [[ -z $HCP_SSHSVC_STATE ]]; then
	echo "Error, 'HCP_SSHSVC_STATE' not defined" >&2
	exit 1
fi
if [[ ! -d $HCP_SSHSVC_STATE ]]; then
	echo "Error, '$HCP_SSHSVC_STATE' (HCP_SSHSVC_STATE) doesn't exist" >&2
	exit 1
fi

# Run the attestation and get our assets
# Note, run_client is not a service, it's a utility, so it doesn't retry
# forever waiting for things to be ready to succeed. We, on the other hand,
# _are_ a service, so we need to be more forgiving.
attestlog=$(mktemp)
if ! /hcp/tools/run_client.sh 2> $attestlog; then
	echo "Warning: the attestation client lost patience, error output follows;" >&2
	cat $attestlog >&2
	rm $attestlog
	echo "Warning: suppressing error output from future attestation attempts" >&2
	attestation_done=
	until [[ -n $attestation_done ]]; do
		echo "Warning: waiting 10 seconds before retrying attestation" >&2
		sleep 10
		echo "Retrying attestation" >&2
		/hcp/tools/run_client.sh 2> /dev/null && attestation_done=yes
	done
fi

# Create some expected accounts
role_account_uid_file user1 $HCP_SSHSVC_STATE/uid-user1 "Test User 1,,,,"
role_account_uid_file user2 $HCP_SSHSVC_STATE/uid-user2 "Test User 2,,,,"
role_account_uid_file user3 $HCP_SSHSVC_STATE/uid-user3 "Test User 3,,,,"
role_account_uid_file alicia $HCP_SSHSVC_STATE/uid-alicia "Alicia Not-Alice,,,,"

# sshd expects this directory to exist
mkdir -p /run/sshd
chmod 755 /run/sshd

# and we want sshd to use these settings;
if [[ ! -f /etc/ssh/sshd_config.d/hcp_ssh_svc.conf ]]; then
	cat > /etc/ssh/sshd_config.d/hcp_ssh_svc.conf <<EOF
# Auto-generated by run_sshsvc.sh
# We need to enable GSSAPI authn to use Kerberos
GSSAPIAuthentication yes
GSSAPICleanupCredentials yes
EOF
fi

# -e tells it to log to stderr, -D tells it not to detach and become a daemon.
/usr/sbin/sshd -e -D
