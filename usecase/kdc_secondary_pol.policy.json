{
    "_": " vim: set expandtab shiftwidth=4 softtabstop=4: ",

    "start": "check_caller_is_admin",
    "default": "reject",

    "filters": {

        "check_caller_is_admin": {
            "_": [
                "This filter chain would check that the object had environment",
                "variables set by the TLS/HTTPS front-end that indicate a",
                "satisfactory client authentication.",
                "Here, we are assuming that access to this interface already",
                "implies that adequate authn/authz has been met.",
                "NB: this rule is only 'called' by policy hooks when client",
                "requests are first serviced. Subsequent policy hooks (such",
                "as validating all the individual assets to be created by the",
                "client request) need not do so, and likely can't do so in any",
                "case as the authn environment variables are probably gone by",
                "then. (If this rule was to run on all policy checks, it would",
                "move to the top and run in sequence rather than being called",
                "and then returning.)" ],
            "if": [
                { "isinstance": ".auth.email", "type": "string" },
                { "elementof": ".auth.email",
                    "value": [ "orchestrator@{KDC_DOMAIN}" ] } ],
            "action": "next",
            "next": "dispatch_cmd",
            "otherwise": "reject" },

        "dispatch_cmd": [
            { "if": { "equal": ".__cmd", "value": "get" },
                "action": "jump", "jump": "do_get" },
            { "if": { "equal": ".__cmd", "value": "ext_keytab" },
                "action": "jump", "jump": "do_ext_keytab" },
            { "action": "return" }
        ],

        "do_get": {
            "if": { "equal": ".get.realm", "value": "{KDC_REALM}" },
            "action": "accept",
            "otherwise": "reject" },

        "do_ext_keytab": {
            "if": { "equal": ".ext_keytab.realm", "value": "{KDC_REALM}" },
            "action": "accept",
            "otherwise": "reject" }

    }
}
